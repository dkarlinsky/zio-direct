package zio.direct.core.util

object CollectionMethodWhitelist {

  def contains(methodName: String) = list.contains(methodName)

  private val list =
    Set(
      "empty",
      "from",
      "getClass",
      "wait",
      "tabulate",
      "apply",
      "unapplySeq",
      "range",
      "concat",
      "fill",
      "iterableFactory",
      "hashCode",
      "equals",
      "clone",
      "toString",
      "unfold",
      "length",
      "updated",
      "appended",
      "prepended",
      "prependedAll",
      "appendedAll",
      "className",
      "take",
      "drop",
      "takeRight",
      "dropRight",
      "tail",
      "init",
      "toVector",
      "applyPreferredMaxLength",
      "stepper",
      "ioob",
      "head",
      "last",
      "foreach",
      "startIndex",
      "endIndex",
      "takeWhile",
      "unapply",
      "andThen",
      "patch",
      "strictOptimizedConcat",
      "sortBy",
      "mkString",
      "reduceOption",
      "addString",
      "grouped",
      "diff",
      "fold",
      "sorted",
      "contains",
      "collectFirst",
      "headOption",
      "size",
      "endsWith",
      "lastOption",
      "padTo",
      "canEqual",
      "splitAt",
      "scan",
      "sum",
      "groupBy",
      "permutations",
      "search",
      "partition",
      "min",
      "seq",
      "tapEach",
      "forall",
      "maxByOption",
      "sameElements",
      "maxOption",
      "union",
      "orElse",
      "findLast",
      "indices",
      "groupMap",
      "toMap",
      "minBy",
      "reverseMap",
      "to",
      "corresponds",
      "sortWith",
      "sizeCompare",
      "prefixLength",
      "view",
      "unzip3",
      "count",
      "flatMap",
      "groupMapReduce",
      "tails",
      "zipWithIndex",
      "companion",
      "lastIndexOfSlice",
      "nonEmpty",
      "scanLeft",
      "hasDefiniteSize",
      "foldLeft",
      "distinctBy",
      "++:",
      "lastIndexWhere",
      "intersect",
      "isEmpty",
      "minByOption",
      "zipAll",
      "withFilter",
      "lastIndexOf",
      "maxBy",
      "foldRight",
      "reduceLeft",
      "applyOrElse",
      "isTraversableAgain",
      "toTraversable",
      "strictOptimizedMap",
      "slice",
      "toArray",
      ":++",
      "zip",
      "reduce",
      "indexWhere",
      ":+",
      "combinations",
      "compose",
      "sizeIs",
      "lift",
      "segmentLength",
      "repr",
      "toIterator",
      "toIterable",
      "unzip",
      "filterNot",
      "partitionMap",
      "collectionClassName",
      "map",
      "++",
      ":\\",
      "product",
      "max",
      "reverse",
      "dropWhile",
      "+:",
      "filter",
      "toSet",
      "toSeq",
      "exists",
      "span",
      "sliding",
      "reduceRightOption",
      "toBuffer",
      "toList",
      "flatten",
      "knownSize",
      "lengthCompare",
      "find",
      "indexOf",
      "reduceLeftOption",
      "collect",
      "containsSlice",
      "toIndexedSeq",
      "distinct",
      "toStream",
      "aggregate",
      "lengthIs",
      "reduceRight",
      "isDefinedAt",
      "scanRight",
      "/:",
      "elementWise",
      "indexOfSlice",
      "transpose",
      "minOption",
      "startsWith"
    )
}
